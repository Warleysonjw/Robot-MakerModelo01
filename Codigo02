Carrinho com Shield e Modulo wifi ESP8266 NODEMCU

#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>

String command;             
int speedCar = 800;         
int speed_Coeff = 3;
int motorA_EN = D1;
int motorA_DIR = D3;
int motorB_EN = D2;
int motorB_DIR = D4;

const char* ssid = "ViuvaNegra- 01";
const char* password = "Aranhamaker";
ESP8266WebServer server(80);

void setup() {
  
 
 pinMode(motorA_EN, OUTPUT);
 pinMode(motorA_DIR, OUTPUT);
 pinMode(motorB_EN, OUTPUT);
 pinMode(motorB_DIR, OUTPUT); 
  
  Serial.begin(115200);

  WiFi.mode(WIFI_AP);
  WiFi.softAP(ssid, password);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
 
     server.on ( "/", HTTP_handleRoot );
     server.onNotFound ( HTTP_handleRoot );
     server.begin();    
}

void goAhead(){ 

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, LOW);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, HIGH);
      digitalWrite(motorB_EN, HIGH);
  }

void goBack(){ 

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, HIGH);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, LOW);
      digitalWrite(motorB_EN, HIGH);
  }

void goRight(){ 

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, HIGH);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, HIGH);
      digitalWrite(motorB_EN, HIGH);
  }

void goLeft(){

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, LOW);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, LOW);
      digitalWrite(motorB_EN, HIGH);
  }

void goAheadRight(){
      
      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, LOW);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, LOW);
      digitalWrite(motorB_EN, HIGH);
   }

void goAheadLeft(){
      
      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, LOW);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, LOW);
      digitalWrite(motorB_EN, HIGH);
  }

void goBackRight(){ 

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, HIGH);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, HIGH);
      digitalWrite(motorB_EN, HIGH);
  }

void goBackLeft(){ 

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, HIGH);
      digitalWrite(motorA_EN, HIGH);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, HIGH);
      digitalWrite(motorB_EN, HIGH);
  }

void stopRobot(){  

      analogWrite(motorA_EN, speedCar);
      digitalWrite(motorA_DIR, LOW);
      digitalWrite(motorA_EN, LOW);

      analogWrite(motorB_EN, speedCar);
      digitalWrite(motorB_DIR, LOW);
      digitalWrite(motorB_EN, LOW);
 }

void loop() {
    server.handleClient();
    
      command = server.arg("State");
      if (command == "F") goAhead();
      else if (command == "B") goBack();
      else if (command == "L") goLeft();
      else if (command == "R") goRight();
      else if (command == "I") goAheadRight();
      else if (command == "G") goAheadLeft();
      else if (command == "J") goBackRight();
      else if (command == "H") goBackLeft();
      else if (command == "0") speedCar = 400;
      else if (command == "1") speedCar = 470;
      else if (command == "2") speedCar = 540;
      else if (command == "3") speedCar = 610;
      else if (command == "4") speedCar = 680;
      else if (command == "5") speedCar = 750;
      else if (command == "6") speedCar = 820;
      else if (command == "7") speedCar = 890;
      else if (command == "8") speedCar = 960;
      else if (command == "9") speedCar = 1023;
      else if (command == "S") stopRobot();
}

void HTTP_handleRoot(void) {

if( server.hasArg("State") ){
       Serial.println(server.arg("State"));
  }
  server.send ( 200, "text/html", "" );
  delay(1);
}
